{"version":3,"file":"component---src-pages-faqs-js-5b45000f72fa3a8dbcaa.js","mappings":"4MAUA,EARc,SAACA,GACb,OACE,qCAAKC,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAOC,MAAM,8BAAiCL,GAC/F,wBAAMM,EAAE,yFAAyFF,KAAK,QAAQG,YAAY,SAGhI,ECiBMC,EAAqBC,EAAAA,QAAAA,IAAAA,WAAU,wEAAVA,CAAU,mQASfC,EAAAA,GAAAA,MAIXA,EAAAA,GAAAA,KAEkBA,EAAAA,GAAAA,WAGvBC,GAAmBF,EAAAA,EAAAA,SAAOG,GAAU,iFAAjBH,CAAiB,8DACpB,SAACT,GAAK,OAAMA,EAAMa,KAAO,IAAM,CAAC,IAIhDC,EAAsBL,EAAAA,QAAAA,IAAAA,WAAU,yEAAVA,CAAU,+KAChBC,EAAAA,GAAAA,OACV,SAACV,GAAK,OAAMA,EAAMa,KAAO,OAAS,CAAC,IAWlCE,EAAe,SAAH,GAA6B,IAAvBC,EAAQ,EAARA,SAAUC,EAAK,EAALA,MACvC,GAAwBC,EAAAA,EAAAA,WAAS,GAA1BL,EAAI,KAAEM,EAAO,KAEpB,OACE,2BACE,gBAACX,EAAkB,CAACY,QAAS,kBAAMD,GAASN,EAAK,GAC9CI,EACD,gBAACN,EAAgB,CAACE,KAAMA,KAE1B,gBAACC,EAAmB,CAACD,KAAMA,GACxBG,EACD,4BAIR,EAMMK,EAAmBZ,EAAAA,QAAAA,IAAAA,WAAU,sEAAVA,CAAU,0IACbC,EAAAA,GAAAA,MAGLY,EAAAA,GAAAA,OAWjB,EAJkB,SAAH,GAAsB,IAAhBN,EAAQ,EAARA,SACnB,OAAO,gBAACK,EAAgB,KAAEL,EAC5B,C,mICrFMO,EAAcd,EAAAA,QAAAA,IAAAA,WAAU,4DAAVA,CAAU,uOAWXa,EAAAA,GAAAA,MAGAA,EAAAA,GAAAA,OAiDnB,EA3CiB,WACf,OACE,gBAACE,EAAA,EAAM,KACP,gBAACD,EAAW,KACV,gBAACE,EAAA,EAAI,CAACC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,QAAS,GAC1D,gBAACJ,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,0BAAI,aACJ,gBAACC,EAAA,EAAS,KACPC,EAAAA,GAAAA,QAAY,SAACC,GAAC,MAAoB,YAAfA,EAAEC,QAAsB,IAAEC,KAAI,SAACC,GACjD,OACE,gBAACL,EAAA,EAAY,CAACM,IAAKD,EAAIE,SAAUvB,MAAOqB,EAAIE,SAAUC,GAAIH,EAAIC,KAC3DD,EAAII,OAGX,KAEF,0BAAI,4BACJ,gBAACT,EAAA,EAAS,KACPC,EAAAA,GAAAA,QAAY,SAACC,GAAC,MAAoB,WAAfA,EAAEC,QAAqB,IAAEC,KAAI,SAACC,GAChD,OACE,gBAACL,EAAA,EAAY,CAACM,IAAKD,EAAIE,SAAUvB,MAAOqB,EAAIE,SAAUC,GAAIH,EAAIC,KAC3DD,EAAII,OAGX,KAEF,0BAAI,iBACJ,gBAACT,EAAA,EAAS,KACPC,EAAAA,GAAAA,QAAY,SAACC,GAAC,MAAoB,WAAfA,EAAEC,QAAqB,IAAEC,KAAI,SAACC,GAChD,OACE,gBAACL,EAAA,EAAY,CAACM,IAAKD,EAAIE,SAAUvB,MAAOqB,EAAIE,SAAUC,GAAIH,EAAIC,KAC3DD,EAAII,OAGX,QAOV,EClEA,EADiB,WAAH,OAAS,gBAACC,EAAI,KAAG,C","sources":["webpack://cov-education/./src/components/Icons/ArrowDown.js","webpack://cov-education/./src/components/Accordion/index.js","webpack://cov-education/./src/content/FAQs/index.js","webpack://cov-education/./src/pages/faqs.js"],"sourcesContent":["import React from 'react';\n\nconst Arrow = (props) => {\n  return (\n    <svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n      <path d=\"M10.59 0.295013L6 4.87501L1.41 0.295013L0 1.70501L6 7.70501L12 1.70501L10.59 0.295013Z\" fill=\"black\" fillOpacity=\"0.54\" />\n    </svg>\n  )\n}\n\nexport default Arrow;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { COLORS, FONTS } from \"../../constants\";\nimport ArrowDown from \"../Icons/ArrowDown\";\n\n/**\n * Example usage:\n *\n * import Accordion, { AccordionRow } from './components/Accordion';\n *\n * function MyComponent() {\n *   return (\n *     <Accordion>\n *       <AccordionRow title=\"First row\">\n *          Some content here\n *       </AccordionRow>\n *       <AccordionRow title=\"Second row\">\n *          more content\n *       </AccordionRow>\n *     </Accordion>\n *   )\n * }\n */\n\nconst AccordionRowHeader = styled.div`\n  height: auto;\n  cursor: pointer;\n  padding: 20px;\n  display: flex;\n  max-width: 700px;\n  width: 95%;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${COLORS.white};\n  text-align: left;\n  margin-left: auto;\n  margin-right: auto;\n  color: ${COLORS.blue};\n  font-weight: 600;\n  border-bottom: 1px solid ${COLORS.lightgray};\n`;\n\nconst AccordionRowIcon = styled(ArrowDown)`\n  transform: rotate(${(props) => (props.open ? 180 : 0)}deg);\n  transition: 0.2s ease transform;\n`;\n\nconst AccordionRowContent = styled.div`\n  background-color: ${COLORS.white};\n  height: ${(props) => (props.open ? \"auto\" : 0)};\n  transition: 0.2s ease height;\n  overflow: hidden;\n  max-width: 700px;\n  width: 95%;\n  text-align: left;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 20px;\n`;\n\nexport const AccordionRow = ({ children, title }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div>\n      <AccordionRowHeader onClick={() => setOpen(!open)}>\n        {title}\n        <AccordionRowIcon open={open} />\n      </AccordionRowHeader>\n      <AccordionRowContent open={open}>\n        {children}\n        <br />\n      </AccordionRowContent>\n    </div>\n  );\n};\n\nAccordionRow.propTypes = {\n  title: PropTypes.string,\n};\n\nconst AccordionWrapper = styled.div`\n  background-color: ${COLORS.white};\n  height: auto;\n  font-size: 14px;\n  font-family: ${FONTS.font2};\n  color: black;\n  min-width: 220px;\n  justify-content: \"center\";\n  align: \"center;\";\n`;\n\nconst Accordion = ({ children }) => {\n  return <AccordionWrapper>{children}</AccordionWrapper>;\n};\n\nexport default Accordion;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Accordion, { AccordionRow } from '../../components/Accordion';\nimport Layout from '../../components/Layout';\n\nimport { FONTS, FAQS } from '../../constants';\n\nconst FAQsWrapper = styled.div`\n  text-align: center;\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  position: relative;\n  overflow: hidden;\n  p{\n    font-family: ${FONTS.font2};\n  }\n  h2 {\n    font-family: ${FONTS.font1};\n    font-weight: 500;\n    padding-top: 20px;\n  }\n`;\n\nconst FAQsPage = () => {\n  return (\n    <Layout>\n    <FAQsWrapper>\n      <Grid container direction=\"row\" justify=\"center\" spacing={2}>\n      <Grid item sm={6} xs={10}>\n        <h2> General </h2>\n        <Accordion>\n          {FAQS.filter((f) => f.category === \"general\").map((faq) => {\n            return (\n              <AccordionRow key={faq.question} title={faq.question} id={faq.key}>\n                {faq.answer}\n              </AccordionRow>\n            )\n          })}\n        </Accordion>\n        <h2> For Parents & Students </h2>\n        <Accordion>\n          {FAQS.filter((f) => f.category === \"mentee\").map((faq) => {\n            return (\n              <AccordionRow key={faq.question} title={faq.question} id={faq.key}>\n                {faq.answer}\n              </AccordionRow>\n            )\n          })}\n        </Accordion>\n        <h2> For Mentors </h2>\n        <Accordion>\n          {FAQS.filter((f) => f.category === \"mentor\").map((faq) => {\n            return (\n              <AccordionRow key={faq.question} title={faq.question} id={faq.key}>\n                {faq.answer}\n              </AccordionRow>\n            )\n          })}\n        </Accordion>\n        </Grid>\n        </Grid>\n    </FAQsWrapper>\n    </Layout>\n  )\n}\n\nexport default FAQsPage;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport FAQs from \"../content/FAQs\";\n\nconst FAQsPage = () => <FAQs/>;\nexport default FAQsPage;\nexport const query = graphql`\n  query($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;"],"names":["props","width","height","viewBox","fill","xmlns","d","fillOpacity","AccordionRowHeader","styled","COLORS","AccordionRowIcon","ArrowDown","open","AccordionRowContent","AccordionRow","children","title","useState","setOpen","onClick","AccordionWrapper","FONTS","FAQsWrapper","Layout","Grid","container","direction","justify","spacing","item","sm","xs","Accordion","FAQS","f","category","map","faq","key","question","id","answer","FAQs"],"sourceRoot":""}